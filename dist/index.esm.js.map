{"version":3,"file":"index.esm.js","sources":["../src/timer.js","../src/domHelpers.js","../src/createGridComponent.js","../src/VariableSizeGrid.js","../src/createListComponent.js","../src/VariableSizeList.js","../src/FixedSizeGrid.js","../src/FixedSizeList.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["// @flow\r\n\r\n// Animation frame based implementation of setTimeout.\r\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\r\n\r\nconst hasNativePerformanceNow =\r\n  typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nconst now = hasNativePerformanceNow\r\n  ? () => performance.now()\r\n  : () => Date.now();\r\n\r\nexport type TimeoutID = {|\r\n  id: AnimationFrameID,\r\n|};\r\n\r\nexport function cancelTimeout(timeoutID: TimeoutID) {\r\n  cancelAnimationFrame(timeoutID.id);\r\n}\r\n\r\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\r\n  const start = now();\r\n\r\n  function tick() {\r\n    if (now() - start >= delay) {\r\n      callback.call(null);\r\n    } else {\r\n      timeoutID.id = requestAnimationFrame(tick);\r\n    }\r\n  }\r\n\r\n  const timeoutID: TimeoutID = {\r\n    id: requestAnimationFrame(tick),\r\n  };\r\n\r\n  return timeoutID;\r\n}\r\n","// @flow\r\n\r\nlet size: number = -1;\r\n\r\n// This utility copied from \"dom-helpers\" package.\r\nexport function getScrollbarSize(recalculate?: boolean = false): number {\r\n  if (size === -1 || recalculate) {\r\n    const div = document.createElement('div');\r\n    const style = div.style;\r\n    style.width = '50px';\r\n    style.height = '50px';\r\n    style.overflow = 'scroll';\r\n\r\n    ((document.body: any): HTMLBodyElement).appendChild(div);\r\n\r\n    size = div.offsetWidth - div.clientWidth;\r\n\r\n    ((document.body: any): HTMLBodyElement).removeChild(div);\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nexport type RTLOffsetType =\r\n  | 'negative'\r\n  | 'positive-descending'\r\n  | 'positive-ascending';\r\n\r\nlet cachedRTLResult: RTLOffsetType | null = null;\r\n\r\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\r\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\r\n// The safest way to check this is to intentionally set a negative offset,\r\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\r\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\r\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\r\n  if (cachedRTLResult === null || recalculate) {\r\n    const outerDiv = document.createElement('div');\r\n    const outerStyle = outerDiv.style;\r\n    outerStyle.width = '50px';\r\n    outerStyle.height = '50px';\r\n    outerStyle.overflow = 'scroll';\r\n    outerStyle.direction = 'rtl';\r\n\r\n    const innerDiv = document.createElement('div');\r\n    const innerStyle = innerDiv.style;\r\n    innerStyle.width = '100px';\r\n    innerStyle.height = '100px';\r\n\r\n    outerDiv.appendChild(innerDiv);\r\n\r\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\r\n\r\n    if (outerDiv.scrollLeft > 0) {\r\n      cachedRTLResult = 'positive-descending';\r\n    } else {\r\n      outerDiv.scrollLeft = 1;\r\n      if (outerDiv.scrollLeft === 0) {\r\n        cachedRTLResult = 'negative';\r\n      } else {\r\n        cachedRTLResult = 'positive-ascending';\r\n      }\r\n    }\r\n\r\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\r\n\r\n    return cachedRTLResult;\r\n  }\r\n\r\n  return cachedRTLResult;\r\n}\r\n","// @flow\r\n\r\nimport memoizeOne from 'memoize-one';\r\nimport { createElement, PureComponent } from 'react';\r\nimport { cancelTimeout, requestTimeout } from './timer';\r\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\r\n\r\nimport type { TimeoutID } from './timer';\r\n\r\ntype Direction = 'ltr' | 'rtl';\r\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\r\n\r\ntype itemSize = number | ((index: number) => number);\r\n\r\ntype RenderComponentProps<T> = {|\r\n  columnIndex: number,\r\n  data: T,\r\n  isScrolling?: boolean,\r\n  rowIndex: number,\r\n  style: Object,\r\n|};\r\nexport type RenderComponent<T> = React$ComponentType<\r\n  $Shape<RenderComponentProps<T>>\r\n>;\r\n\r\ntype ScrollDirection = 'forward' | 'backward';\r\n\r\ntype OnItemsRenderedCallback = ({\r\n  overscanColumnStartIndex: number,\r\n  overscanColumnStopIndex: number,\r\n  overscanRowStartIndex: number,\r\n  overscanRowStopIndex: number,\r\n  visibleColumnStartIndex: number,\r\n  visibleColumnStopIndex: number,\r\n  visibleRowStartIndex: number,\r\n  visibleRowStopIndex: number,\r\n}) => void;\r\ntype OnScrollCallback = ({\r\n  horizontalScrollDirection: ScrollDirection,\r\n  scrollLeft: number,\r\n  scrollTop: number,\r\n  scrollUpdateWasRequested: boolean,\r\n  verticalScrollDirection: ScrollDirection,\r\n}) => void;\r\n\r\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\r\ntype ItemStyleCache = { [key: string]: Object };\r\n\r\ntype OuterProps = {|\r\n  children: React$Node,\r\n  className: string | void,\r\n  onScroll: ScrollEvent => void,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\ntype InnerProps = {|\r\n  children: React$Node,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\nexport type Props<T> = {|\r\n  children: RenderComponent<T>,\r\n  className?: string,\r\n  columnCount: number,\r\n  columnWidth: itemSize,\r\n  direction: Direction,\r\n  height: number,\r\n  initialScrollLeft?: number,\r\n  initialScrollTop?: number,\r\n  innerRef?: any,\r\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\r\n  innerTagName?: string, // deprecated\r\n  itemData: T,\r\n  itemKey?: (params: {|\r\n    columnIndex: number,\r\n    data: T,\r\n    rowIndex: number,\r\n  |}) => any,\r\n  onItemsRendered?: OnItemsRenderedCallback,\r\n  onScroll?: OnScrollCallback,\r\n  outerRef?: any,\r\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\r\n  outerTagName?: string, // deprecated\r\n  overscanColumnCount?: number,\r\n  overscanColumnsCount?: number, // deprecated\r\n  overscanCount?: number, // deprecated\r\n  overscanRowCount?: number,\r\n  overscanRowsCount?: number, // deprecated\r\n  rowCount: number,\r\n  rowHeight: itemSize,\r\n  style?: Object,\r\n  useIsScrolling: boolean,\r\n  width: number,\r\n|};\r\n\r\ntype State = {|\r\n  instance: any,\r\n  isScrolling: boolean,\r\n  horizontalScrollDirection: ScrollDirection,\r\n  scrollLeft: number,\r\n  scrollTop: number,\r\n  scrollUpdateWasRequested: boolean,\r\n  verticalScrollDirection: ScrollDirection,\r\n|};\r\n\r\ntype getItemOffset = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype getItemSize = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\r\ntype GetOffsetForItemAndAlignment = (\r\n  props: Props<any>,\r\n  index: number,\r\n  align: ScrollToAlign,\r\n  scrollOffset: number,\r\n  instanceProps: any,\r\n  scrollbarSize: number\r\n) => number;\r\ntype GetStartIndexForOffset = (\r\n  props: Props<any>,\r\n  offset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetStopIndexForStartIndex = (\r\n  props: Props<any>,\r\n  startIndex: number,\r\n  scrollOffset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\r\ntype ValidateProps = (props: Props<any>) => void;\r\n\r\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\r\n\r\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\r\n  `${rowIndex}:${columnIndex}`;\r\n\r\n// In DEV mode, this Set helps us only log a warning once per component instance.\r\n// This avoids spamming the console every time a render happens.\r\nlet devWarningsOverscanCount = null;\r\nlet devWarningsOverscanRowsColumnsCount = null;\r\nlet devWarningsTagName = null;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\r\n    devWarningsOverscanCount = new WeakSet();\r\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\r\n    devWarningsTagName = new WeakSet();\r\n  }\r\n}\r\n\r\nexport default function createGridComponent({\r\n  getColumnOffset,\r\n  getColumnStartIndexForOffset,\r\n  getColumnStopIndexForStartIndex,\r\n  getColumnWidth,\r\n  getEstimatedTotalHeight,\r\n  getEstimatedTotalWidth,\r\n  getOffsetForColumnAndAlignment,\r\n  getOffsetForRowAndAlignment,\r\n  getRowHeight,\r\n  getRowOffset,\r\n  getRowStartIndexForOffset,\r\n  getRowStopIndexForStartIndex,\r\n  initInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange,\r\n  validateProps,\r\n}: {|\r\n  getColumnOffset: getItemOffset,\r\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\r\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\r\n  getColumnWidth: getItemSize,\r\n  getEstimatedTotalHeight: getEstimatedTotalSize,\r\n  getEstimatedTotalWidth: getEstimatedTotalSize,\r\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\r\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\r\n  getRowOffset: getItemOffset,\r\n  getRowHeight: getItemSize,\r\n  getRowStartIndexForOffset: GetStartIndexForOffset,\r\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\r\n  initInstanceProps: InitInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange: boolean,\r\n  validateProps: ValidateProps,\r\n|}) {\r\n  return class Grid<T> extends PureComponent<Props<T>, State> {\r\n    _instanceProps: any = initInstanceProps(this.props, this);\r\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\r\n    _outerRef: ?HTMLDivElement;\r\n\r\n    static defaultProps = {\r\n      direction: 'ltr',\r\n      itemData: undefined,\r\n      useIsScrolling: false,\r\n    };\r\n\r\n    state: State = {\r\n      instance: this,\r\n      isScrolling: false,\r\n      horizontalScrollDirection: 'forward',\r\n      scrollLeft:\r\n        typeof this.props.initialScrollLeft === 'number'\r\n          ? this.props.initialScrollLeft\r\n          : 0,\r\n      scrollTop:\r\n        typeof this.props.initialScrollTop === 'number'\r\n          ? this.props.initialScrollTop\r\n          : 0,\r\n      scrollUpdateWasRequested: false,\r\n      verticalScrollDirection: 'forward',\r\n    };\r\n\r\n    // Always use explicit constructor for React components.\r\n    // It produces less code after transpilation. (#26)\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props: Props<T>) {\r\n      super(props);\r\n    }\r\n\r\n    static getDerivedStateFromProps(\r\n      nextProps: Props<T>,\r\n      prevState: State\r\n    ): $Shape<State> | null {\r\n      validateSharedProps(nextProps, prevState);\r\n      validateProps(nextProps);\r\n      return null;\r\n    }\r\n\r\n    scrollTo({\r\n      scrollLeft,\r\n      scrollTop,\r\n    }: {\r\n      scrollLeft: number,\r\n      scrollTop: number,\r\n    }): void {\r\n      if (scrollLeft !== undefined) {\r\n        scrollLeft = Math.max(0, scrollLeft);\r\n      }\r\n      if (scrollTop !== undefined) {\r\n        scrollTop = Math.max(0, scrollTop);\r\n      }\r\n\r\n      this.setState(prevState => {\r\n        if (scrollLeft === undefined) {\r\n          scrollLeft = prevState.scrollLeft;\r\n        }\r\n        if (scrollTop === undefined) {\r\n          scrollTop = prevState.scrollTop;\r\n        }\r\n\r\n        if (\r\n          prevState.scrollLeft === scrollLeft &&\r\n          prevState.scrollTop === scrollTop\r\n        ) {\r\n          return null;\r\n        }\r\n\r\n        return {\r\n          horizontalScrollDirection:\r\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\r\n          scrollLeft: scrollLeft,\r\n          scrollTop: scrollTop,\r\n          scrollUpdateWasRequested: true,\r\n          verticalScrollDirection:\r\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    }\r\n\r\n    scrollToItem({\r\n      align = 'auto',\r\n      columnIndex,\r\n      rowIndex,\r\n    }: {\r\n      align: ScrollToAlign,\r\n      columnIndex?: number,\r\n      rowIndex?: number,\r\n    }): void {\r\n      const { columnCount, height, rowCount, width } = this.props;\r\n      const { scrollLeft, scrollTop } = this.state;\r\n      const scrollbarSize = getScrollbarSize();\r\n\r\n      if (columnIndex !== undefined) {\r\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\r\n      }\r\n      if (rowIndex !== undefined) {\r\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\r\n      }\r\n\r\n      const estimatedTotalHeight = getEstimatedTotalHeight(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n      const estimatedTotalWidth = getEstimatedTotalWidth(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n\r\n      // The scrollbar size should be considered when scrolling an item into view,\r\n      // to ensure it's fully visible.\r\n      // But we only need to account for its size when it's actually visible.\r\n      const horizontalScrollbarSize =\r\n        estimatedTotalWidth > width ? scrollbarSize : 0;\r\n      const verticalScrollbarSize =\r\n        estimatedTotalHeight > height ? scrollbarSize : 0;\r\n\r\n      this.scrollTo({\r\n        scrollLeft:\r\n          columnIndex !== undefined\r\n            ? getOffsetForColumnAndAlignment(\r\n                this.props,\r\n                columnIndex,\r\n                align,\r\n                scrollLeft,\r\n                this._instanceProps,\r\n                verticalScrollbarSize\r\n              )\r\n            : scrollLeft,\r\n        scrollTop:\r\n          rowIndex !== undefined\r\n            ? getOffsetForRowAndAlignment(\r\n                this.props,\r\n                rowIndex,\r\n                align,\r\n                scrollTop,\r\n                this._instanceProps,\r\n                horizontalScrollbarSize\r\n              )\r\n            : scrollTop,\r\n      });\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { initialScrollLeft, initialScrollTop } = this.props;\r\n\r\n      if (this._outerRef != null) {\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n        if (typeof initialScrollLeft === 'number') {\r\n          outerRef.scrollLeft = initialScrollLeft;\r\n        }\r\n        if (typeof initialScrollTop === 'number') {\r\n          outerRef.scrollTop = initialScrollTop;\r\n        }\r\n      }\r\n\r\n      this._callPropsCallbacks();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      const { direction } = this.props;\r\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\r\n\r\n      if (scrollUpdateWasRequested && this._outerRef != null) {\r\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n        if (direction === 'rtl') {\r\n          switch (getRTLOffsetType()) {\r\n            case 'negative':\r\n              outerRef.scrollLeft = -scrollLeft;\r\n              break;\r\n            case 'positive-ascending':\r\n              outerRef.scrollLeft = scrollLeft;\r\n              break;\r\n            default:\r\n              const { clientWidth, scrollWidth } = outerRef;\r\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n              break;\r\n          }\r\n        } else {\r\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\r\n        }\r\n\r\n        outerRef.scrollTop = Math.max(0, scrollTop);\r\n      }\r\n\r\n      this._callPropsCallbacks();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        children,\r\n        className,\r\n        columnCount,\r\n        direction,\r\n        height,\r\n        innerRef,\r\n        innerElementType,\r\n        innerTagName,\r\n        itemData,\r\n        itemKey = defaultItemKey,\r\n        outerElementType,\r\n        outerTagName,\r\n        rowCount,\r\n        style,\r\n        useIsScrolling,\r\n        width,\r\n      } = this.props;\r\n      const { isScrolling } = this.state;\r\n\r\n      const [\r\n        columnStartIndex,\r\n        columnStopIndex,\r\n      ] = this._getHorizontalRangeToRender();\r\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\r\n\r\n      const items = [];\r\n      if (columnCount > 0 && rowCount) {\r\n        for (\r\n          let rowIndex = rowStartIndex;\r\n          rowIndex <= rowStopIndex;\r\n          rowIndex++\r\n        ) {\r\n          for (\r\n            let columnIndex = columnStartIndex;\r\n            columnIndex <= columnStopIndex;\r\n            columnIndex++\r\n          ) {\r\n            items.push(\r\n              createElement(children, {\r\n                columnIndex,\r\n                data: itemData,\r\n                isScrolling: useIsScrolling ? isScrolling : undefined,\r\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\r\n                rowIndex,\r\n                style: this._getItemStyle(rowIndex, columnIndex),\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      // Read this value AFTER items have been created,\r\n      // So their actual sizes (if variable) are taken into consideration.\r\n      const estimatedTotalHeight = getEstimatedTotalHeight(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n      const estimatedTotalWidth = getEstimatedTotalWidth(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n\r\n      return createElement(\r\n        outerElementType || outerTagName || 'div',\r\n        {\r\n          className,\r\n          onScroll: this._onScroll,\r\n          ref: this._outerRefSetter,\r\n          style: {\r\n            position: 'relative',\r\n            height,\r\n            width,\r\n            overflow: 'auto',\r\n            WebkitOverflowScrolling: 'touch',\r\n            willChange: 'transform',\r\n            direction,\r\n            ...style,\r\n          },\r\n        },\r\n        createElement(innerElementType || innerTagName || 'div', {\r\n          children: items,\r\n          ref: innerRef,\r\n          style: {\r\n            height: estimatedTotalHeight,\r\n            pointerEvents: isScrolling ? 'none' : undefined,\r\n            width: estimatedTotalWidth,\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    _callOnItemsRendered: (\r\n      overscanColumnStartIndex: number,\r\n      overscanColumnStopIndex: number,\r\n      overscanRowStartIndex: number,\r\n      overscanRowStopIndex: number,\r\n      visibleColumnStartIndex: number,\r\n      visibleColumnStopIndex: number,\r\n      visibleRowStartIndex: number,\r\n      visibleRowStopIndex: number\r\n    ) => void;\r\n    _callOnItemsRendered = memoizeOne(\r\n      (\r\n        overscanColumnStartIndex: number,\r\n        overscanColumnStopIndex: number,\r\n        overscanRowStartIndex: number,\r\n        overscanRowStopIndex: number,\r\n        visibleColumnStartIndex: number,\r\n        visibleColumnStopIndex: number,\r\n        visibleRowStartIndex: number,\r\n        visibleRowStopIndex: number\r\n      ) =>\r\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\r\n          overscanColumnStartIndex,\r\n          overscanColumnStopIndex,\r\n          overscanRowStartIndex,\r\n          overscanRowStopIndex,\r\n          visibleColumnStartIndex,\r\n          visibleColumnStopIndex,\r\n          visibleRowStartIndex,\r\n          visibleRowStopIndex,\r\n        })\r\n    );\r\n\r\n    _callOnScroll: (\r\n      scrollLeft: number,\r\n      scrollTop: number,\r\n      horizontalScrollDirection: ScrollDirection,\r\n      verticalScrollDirection: ScrollDirection,\r\n      scrollUpdateWasRequested: boolean\r\n    ) => void;\r\n    _callOnScroll = memoizeOne(\r\n      (\r\n        scrollLeft: number,\r\n        scrollTop: number,\r\n        horizontalScrollDirection: ScrollDirection,\r\n        verticalScrollDirection: ScrollDirection,\r\n        scrollUpdateWasRequested: boolean\r\n      ) =>\r\n        ((this.props.onScroll: any): OnScrollCallback)({\r\n          horizontalScrollDirection,\r\n          scrollLeft,\r\n          scrollTop,\r\n          verticalScrollDirection,\r\n          scrollUpdateWasRequested,\r\n        })\r\n    );\r\n\r\n    _callPropsCallbacks() {\r\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\r\n\r\n      if (typeof onItemsRendered === 'function') {\r\n        if (columnCount > 0 && rowCount > 0) {\r\n          const [\r\n            overscanColumnStartIndex,\r\n            overscanColumnStopIndex,\r\n            visibleColumnStartIndex,\r\n            visibleColumnStopIndex,\r\n          ] = this._getHorizontalRangeToRender();\r\n          const [\r\n            overscanRowStartIndex,\r\n            overscanRowStopIndex,\r\n            visibleRowStartIndex,\r\n            visibleRowStopIndex,\r\n          ] = this._getVerticalRangeToRender();\r\n          this._callOnItemsRendered(\r\n            overscanColumnStartIndex,\r\n            overscanColumnStopIndex,\r\n            overscanRowStartIndex,\r\n            overscanRowStopIndex,\r\n            visibleColumnStartIndex,\r\n            visibleColumnStopIndex,\r\n            visibleRowStartIndex,\r\n            visibleRowStopIndex\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeof onScroll === 'function') {\r\n        const {\r\n          horizontalScrollDirection,\r\n          scrollLeft,\r\n          scrollTop,\r\n          scrollUpdateWasRequested,\r\n          verticalScrollDirection,\r\n        } = this.state;\r\n        this._callOnScroll(\r\n          scrollLeft,\r\n          scrollTop,\r\n          horizontalScrollDirection,\r\n          verticalScrollDirection,\r\n          scrollUpdateWasRequested\r\n        );\r\n      }\r\n    }\r\n\r\n    // Lazily create and cache item styles while scrolling,\r\n    // So that pure component sCU will prevent re-renders.\r\n    // We maintain this cache, and pass a style prop rather than index,\r\n    // So that List can clear cached styles and force item re-render if necessary.\r\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\r\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\r\n      const { columnWidth, direction, rowHeight } = this.props;\r\n\r\n      const itemStyleCache = this._getItemStyleCache(\r\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\r\n        shouldResetStyleCacheOnItemSizeChange && direction,\r\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\r\n      );\r\n\r\n      const key = `${rowIndex}:${columnIndex}`;\r\n\r\n      let style;\r\n      if (itemStyleCache.hasOwnProperty(key)) {\r\n        style = itemStyleCache[key];\r\n      } else {\r\n        const offset = getColumnOffset(\r\n          this.props,\r\n          columnIndex,\r\n          this._instanceProps\r\n        );\r\n        const isRtl = direction === 'rtl';\r\n        itemStyleCache[key] = style = {\r\n          position: 'absolute',\r\n          left: isRtl ? undefined : offset,\r\n          right: isRtl ? offset : undefined,\r\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\r\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\r\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\r\n        };\r\n      }\r\n\r\n      return style;\r\n    };\r\n\r\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\r\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\r\n\r\n    _getHorizontalRangeToRender(): [number, number, number, number] {\r\n      const {\r\n        columnCount,\r\n        overscanColumnCount,\r\n        overscanColumnsCount,\r\n        overscanCount,\r\n        rowCount,\r\n      } = this.props;\r\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\r\n\r\n      const overscanCountResolved: number =\r\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\r\n\r\n      if (columnCount === 0 || rowCount === 0) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      const startIndex = getColumnStartIndexForOffset(\r\n        this.props,\r\n        scrollLeft,\r\n        this._instanceProps\r\n      );\r\n      const stopIndex = getColumnStopIndexForStartIndex(\r\n        this.props,\r\n        startIndex,\r\n        scrollLeft,\r\n        this._instanceProps\r\n      );\r\n\r\n      // Overscan by one item in each direction so that tab/focus works.\r\n      // If there isn't at least one extra item, tab loops back around.\r\n      const overscanBackward =\r\n        !isScrolling || horizontalScrollDirection === 'backward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n      const overscanForward =\r\n        !isScrolling || horizontalScrollDirection === 'forward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n\r\n      return [\r\n        Math.max(0, startIndex - overscanBackward),\r\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\r\n        startIndex,\r\n        stopIndex,\r\n      ];\r\n    }\r\n\r\n    _getVerticalRangeToRender(): [number, number, number, number] {\r\n      const {\r\n        columnCount,\r\n        overscanCount,\r\n        overscanRowCount,\r\n        overscanRowsCount,\r\n        rowCount,\r\n      } = this.props;\r\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\r\n\r\n      const overscanCountResolved: number =\r\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\r\n\r\n      if (columnCount === 0 || rowCount === 0) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      const startIndex = getRowStartIndexForOffset(\r\n        this.props,\r\n        scrollTop,\r\n        this._instanceProps\r\n      );\r\n      const stopIndex = getRowStopIndexForStartIndex(\r\n        this.props,\r\n        startIndex,\r\n        scrollTop,\r\n        this._instanceProps\r\n      );\r\n\r\n      // Overscan by one item in each direction so that tab/focus works.\r\n      // If there isn't at least one extra item, tab loops back around.\r\n      const overscanBackward =\r\n        !isScrolling || verticalScrollDirection === 'backward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n      const overscanForward =\r\n        !isScrolling || verticalScrollDirection === 'forward'\r\n          ? Math.max(1, overscanCountResolved)\r\n          : 1;\r\n\r\n      return [\r\n        Math.max(0, startIndex - overscanBackward),\r\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\r\n        startIndex,\r\n        stopIndex,\r\n      ];\r\n    }\r\n\r\n    _onScroll = (event: ScrollEvent): void => {\r\n      const {\r\n        clientHeight,\r\n        clientWidth,\r\n        scrollLeft,\r\n        scrollTop,\r\n        scrollHeight,\r\n        scrollWidth,\r\n      } = event.currentTarget;\r\n      this.setState(prevState => {\r\n        if (\r\n          prevState.scrollLeft === scrollLeft &&\r\n          prevState.scrollTop === scrollTop\r\n        ) {\r\n          // Scroll position may have been updated by cDM/cDU,\r\n          // In which case we don't need to trigger another render,\r\n          // And we don't want to update state.isScrolling.\r\n          return null;\r\n        }\r\n\r\n        const { direction } = this.props;\r\n\r\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\r\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\r\n        let calculatedScrollLeft = scrollLeft;\r\n        if (direction === 'rtl') {\r\n          switch (getRTLOffsetType()) {\r\n            case 'negative':\r\n              calculatedScrollLeft = -scrollLeft;\r\n              break;\r\n            case 'positive-descending':\r\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n              break;\r\n          }\r\n        }\r\n\r\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\r\n        calculatedScrollLeft = Math.max(\r\n          0,\r\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\r\n        );\r\n        const calculatedScrollTop = Math.max(\r\n          0,\r\n          Math.min(scrollTop, scrollHeight - clientHeight)\r\n        );\r\n\r\n        return {\r\n          isScrolling: true,\r\n          horizontalScrollDirection:\r\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\r\n          scrollLeft: calculatedScrollLeft,\r\n          scrollTop: calculatedScrollTop,\r\n          verticalScrollDirection:\r\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\r\n          scrollUpdateWasRequested: false,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    };\r\n\r\n    _outerRefSetter = (ref: any): void => {\r\n      const { outerRef } = this.props;\r\n\r\n      this._outerRef = ((ref: any): HTMLDivElement);\r\n\r\n      if (typeof outerRef === 'function') {\r\n        outerRef(ref);\r\n      } else if (\r\n        outerRef != null &&\r\n        typeof outerRef === 'object' &&\r\n        outerRef.hasOwnProperty('current')\r\n      ) {\r\n        outerRef.current = ref;\r\n      }\r\n    };\r\n\r\n    _resetIsScrollingDebounced = () => {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n\r\n      this._resetIsScrollingTimeoutId = requestTimeout(\r\n        this._resetIsScrolling,\r\n        IS_SCROLLING_DEBOUNCE_INTERVAL\r\n      );\r\n    };\r\n\r\n    _resetIsScrolling = () => {\r\n      this._resetIsScrollingTimeoutId = null;\r\n\r\n      this.setState({ isScrolling: false }, () => {\r\n        // Clear style cache after state update has been committed.\r\n        // This way we don't break pure sCU for items that don't use isScrolling param.\r\n        this._getItemStyleCache(-1);\r\n      });\r\n    };\r\n  };\r\n}\r\n\r\nconst validateSharedProps = (\r\n  {\r\n    children,\r\n    direction,\r\n    height,\r\n    innerTagName,\r\n    outerTagName,\r\n    overscanColumnsCount,\r\n    overscanCount,\r\n    overscanRowsCount,\r\n    width,\r\n  }: Props<any>,\r\n  { instance }: State\r\n): void => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (typeof overscanCount === 'number') {\r\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\r\n        devWarningsOverscanCount.add(instance);\r\n        console.warn(\r\n          'The overscanCount prop has been deprecated. ' +\r\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (\r\n      typeof overscanColumnsCount === 'number' ||\r\n      typeof overscanRowsCount === 'number'\r\n    ) {\r\n      if (\r\n        devWarningsOverscanRowsColumnsCount &&\r\n        !devWarningsOverscanRowsColumnsCount.has(instance)\r\n      ) {\r\n        devWarningsOverscanRowsColumnsCount.add(instance);\r\n        console.warn(\r\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\r\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (innerTagName != null || outerTagName != null) {\r\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\r\n        devWarningsTagName.add(instance);\r\n        console.warn(\r\n          'The innerTagName and outerTagName props have been deprecated. ' +\r\n            'Please use the innerElementType and outerElementType props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (children == null) {\r\n      throw Error(\r\n        'An invalid \"children\" prop has been specified. ' +\r\n          'Value should be a React component. ' +\r\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\r\n      );\r\n    }\r\n\r\n    switch (direction) {\r\n      case 'ltr':\r\n      case 'rtl':\r\n        // Valid values\r\n        break;\r\n      default:\r\n        throw Error(\r\n          'An invalid \"direction\" prop has been specified. ' +\r\n            'Value should be either \"ltr\" or \"rtl\". ' +\r\n            `\"${direction}\" was specified.`\r\n        );\r\n    }\r\n\r\n    if (typeof width !== 'number') {\r\n      throw Error(\r\n        'An invalid \"width\" prop has been specified. ' +\r\n          'Grids must specify a number for width. ' +\r\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\r\n      );\r\n    }\r\n\r\n    if (typeof height !== 'number') {\r\n      throw Error(\r\n        'An invalid \"height\" prop has been specified. ' +\r\n          'Grids must specify a number for height. ' +\r\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\r\n      );\r\n    }\r\n  }\r\n};\r\n","// @flow\r\n\r\nimport createGridComponent from './createGridComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createGridComponent';\r\n\r\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\r\n\r\ntype VariableSizeProps = {|\r\n  estimatedColumnWidth: number,\r\n  estimatedRowHeight: number,\r\n  ...Props<any>,\r\n|};\r\n\r\ntype itemSizeGetter = (index: number) => number;\r\ntype ItemType = 'column' | 'row';\r\n\r\ntype ItemMetadata = {|\r\n  offset: number,\r\n  size: number,\r\n|};\r\ntype ItemMetadataMap = { [index: number]: ItemMetadata };\r\ntype InstanceProps = {|\r\n  columnMetadataMap: ItemMetadataMap,\r\n  estimatedColumnWidth: number,\r\n  estimatedRowHeight: number,\r\n  lastMeasuredColumnIndex: number,\r\n  lastMeasuredRowIndex: number,\r\n  rowMetadataMap: ItemMetadataMap,\r\n|};\r\n\r\nconst getEstimatedTotalHeight = (\r\n  { rowCount }: Props<any>,\r\n  { rowMetadataMap, estimatedRowHeight, lastMeasuredRowIndex }: InstanceProps\r\n) => {\r\n  let totalSizeOfMeasuredRows = 0;\r\n\r\n  // Edge case check for when the number of items decreases while a scroll is in progress.\r\n  // https://github.com/bvaughn/react-window/pull/138\r\n  if (lastMeasuredRowIndex >= rowCount) {\r\n    lastMeasuredRowIndex = rowCount - 1;\r\n  }\r\n\r\n  if (lastMeasuredRowIndex >= 0) {\r\n    const itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\r\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\r\n  }\r\n\r\n  const numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\r\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\r\n\r\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\r\n};\r\n\r\nconst getEstimatedTotalWidth = (\r\n  { columnCount }: Props<any>,\r\n  {\r\n    columnMetadataMap,\r\n    estimatedColumnWidth,\r\n    lastMeasuredColumnIndex,\r\n  }: InstanceProps\r\n) => {\r\n  let totalSizeOfMeasuredRows = 0;\r\n\r\n  // Edge case check for when the number of items decreases while a scroll is in progress.\r\n  // https://github.com/bvaughn/react-window/pull/138\r\n  if (lastMeasuredColumnIndex >= columnCount) {\r\n    lastMeasuredColumnIndex = columnCount - 1;\r\n  }\r\n\r\n  if (lastMeasuredColumnIndex >= 0) {\r\n    const itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\r\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\r\n  }\r\n\r\n  const numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\r\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\r\n\r\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\r\n};\r\n\r\nconst getItemMetadata = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: InstanceProps\r\n): ItemMetadata => {\r\n  let itemMetadataMap, itemSize, lastMeasuredIndex;\r\n  if (itemType === 'column') {\r\n    itemMetadataMap = instanceProps.columnMetadataMap;\r\n    itemSize = ((props.columnWidth: any): itemSizeGetter);\r\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\r\n  } else {\r\n    itemMetadataMap = instanceProps.rowMetadataMap;\r\n    itemSize = ((props.rowHeight: any): itemSizeGetter);\r\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\r\n  }\r\n\r\n  if (index > lastMeasuredIndex) {\r\n    let offset = 0;\r\n    if (lastMeasuredIndex >= 0) {\r\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\r\n      offset = itemMetadata.offset + itemMetadata.size;\r\n    }\r\n\r\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\r\n      let size = itemSize(i);\r\n\r\n      itemMetadataMap[i] = {\r\n        offset,\r\n        size,\r\n      };\r\n\r\n      offset += size;\r\n    }\r\n\r\n    if (itemType === 'column') {\r\n      instanceProps.lastMeasuredColumnIndex = index;\r\n    } else {\r\n      instanceProps.lastMeasuredRowIndex = index;\r\n    }\r\n  }\r\n\r\n  return itemMetadataMap[index];\r\n};\r\n\r\nconst findNearestItem = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  offset: number\r\n) => {\r\n  let itemMetadataMap, lastMeasuredIndex;\r\n  if (itemType === 'column') {\r\n    itemMetadataMap = instanceProps.columnMetadataMap;\r\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\r\n  } else {\r\n    itemMetadataMap = instanceProps.rowMetadataMap;\r\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\r\n  }\r\n\r\n  const lastMeasuredItemOffset =\r\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\r\n\r\n  if (lastMeasuredItemOffset >= offset) {\r\n    // If we've already measured items within this range just use a binary search as it's faster.\r\n    return findNearestItemBinarySearch(\r\n      itemType,\r\n      props,\r\n      instanceProps,\r\n      lastMeasuredIndex,\r\n      0,\r\n      offset\r\n    );\r\n  } else {\r\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n    // The overall complexity for this approach is O(log n).\r\n    return findNearestItemExponentialSearch(\r\n      itemType,\r\n      props,\r\n      instanceProps,\r\n      Math.max(0, lastMeasuredIndex),\r\n      offset\r\n    );\r\n  }\r\n};\r\n\r\nconst findNearestItemBinarySearch = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  high: number,\r\n  low: number,\r\n  offset: number\r\n): number => {\r\n  while (low <= high) {\r\n    const middle = low + Math.floor((high - low) / 2);\r\n    const currentOffset = getItemMetadata(\r\n      itemType,\r\n      props,\r\n      middle,\r\n      instanceProps\r\n    ).offset;\r\n\r\n    if (currentOffset === offset) {\r\n      return middle;\r\n    } else if (currentOffset < offset) {\r\n      low = middle + 1;\r\n    } else if (currentOffset > offset) {\r\n      high = middle - 1;\r\n    }\r\n  }\r\n\r\n  if (low > 0) {\r\n    return low - 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nconst findNearestItemExponentialSearch = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  index: number,\r\n  offset: number\r\n): number => {\r\n  const itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\r\n  let interval = 1;\r\n\r\n  while (\r\n    index < itemCount &&\r\n    getItemMetadata(itemType, props, index, instanceProps).offset < offset\r\n  ) {\r\n    index += interval;\r\n    interval *= 2;\r\n  }\r\n\r\n  return findNearestItemBinarySearch(\r\n    itemType,\r\n    props,\r\n    instanceProps,\r\n    Math.min(index, itemCount - 1),\r\n    Math.floor(index / 2),\r\n    offset\r\n  );\r\n};\r\n\r\nconst getOffsetForIndexAndAlignment = (\r\n  itemType: ItemType,\r\n  props: Props<any>,\r\n  index: number,\r\n  align: ScrollToAlign,\r\n  scrollOffset: number,\r\n  instanceProps: InstanceProps,\r\n  scrollbarSize: number\r\n): number => {\r\n  const size = itemType === 'column' ? props.width : props.height;\r\n  const itemMetadata = getItemMetadata(itemType, props, index, instanceProps);\r\n\r\n  // Get estimated total size after ItemMetadata is computed,\r\n  // To ensure it reflects actual measurements instead of just estimates.\r\n  const estimatedTotalSize =\r\n    itemType === 'column'\r\n      ? getEstimatedTotalWidth(props, instanceProps)\r\n      : getEstimatedTotalHeight(props, instanceProps);\r\n\r\n  const maxOffset = Math.max(\r\n    0,\r\n    Math.min(estimatedTotalSize - size, itemMetadata.offset)\r\n  );\r\n  const minOffset = Math.max(\r\n    0,\r\n    itemMetadata.offset - size + scrollbarSize + itemMetadata.size\r\n  );\r\n\r\n  if (align === 'smart') {\r\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\r\n      align = 'auto';\r\n    } else {\r\n      align = 'center';\r\n    }\r\n  }\r\n\r\n  switch (align) {\r\n    case 'start':\r\n      return maxOffset;\r\n    case 'end':\r\n      return minOffset;\r\n    case 'center':\r\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\r\n    case 'auto':\r\n    default:\r\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\r\n        return scrollOffset;\r\n      } else if (minOffset > maxOffset) {\r\n        // Because we only take into account the scrollbar size when calculating minOffset\r\n        // this value can be larger than maxOffset when at the end of the list\r\n        return minOffset;\r\n      } else if (scrollOffset < minOffset) {\r\n        return minOffset;\r\n      } else {\r\n        return maxOffset;\r\n      }\r\n  }\r\n};\r\n\r\nconst VariableSizeGrid = createGridComponent({\r\n  getColumnOffset: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => getItemMetadata('column', props, index, instanceProps).offset,\r\n\r\n  getColumnStartIndexForOffset: (\r\n    props: Props<any>,\r\n    scrollLeft: number,\r\n    instanceProps: InstanceProps\r\n  ): number => findNearestItem('column', props, instanceProps, scrollLeft),\r\n\r\n  getColumnStopIndexForStartIndex: (\r\n    props: Props<any>,\r\n    startIndex: number,\r\n    scrollLeft: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { columnCount, width } = props;\r\n\r\n    const itemMetadata = getItemMetadata(\r\n      'column',\r\n      props,\r\n      startIndex,\r\n      instanceProps\r\n    );\r\n    const maxOffset = scrollLeft + width;\r\n\r\n    let offset = itemMetadata.offset + itemMetadata.size;\r\n    let stopIndex = startIndex;\r\n\r\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\r\n      stopIndex++;\r\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\r\n    }\r\n\r\n    return stopIndex;\r\n  },\r\n\r\n  getColumnWidth: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => instanceProps.columnMetadataMap[index].size,\r\n\r\n  getEstimatedTotalHeight,\r\n  getEstimatedTotalWidth,\r\n\r\n  getOffsetForColumnAndAlignment: (\r\n    props: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps,\r\n    scrollbarSize: number\r\n  ): number =>\r\n    getOffsetForIndexAndAlignment(\r\n      'column',\r\n      props,\r\n      index,\r\n      align,\r\n      scrollOffset,\r\n      instanceProps,\r\n      scrollbarSize\r\n    ),\r\n\r\n  getOffsetForRowAndAlignment: (\r\n    props: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps,\r\n    scrollbarSize: number\r\n  ): number =>\r\n    getOffsetForIndexAndAlignment(\r\n      'row',\r\n      props,\r\n      index,\r\n      align,\r\n      scrollOffset,\r\n      instanceProps,\r\n      scrollbarSize\r\n    ),\r\n\r\n  getRowOffset: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => getItemMetadata('row', props, index, instanceProps).offset,\r\n\r\n  getRowHeight: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => instanceProps.rowMetadataMap[index].size,\r\n\r\n  getRowStartIndexForOffset: (\r\n    props: Props<any>,\r\n    scrollTop: number,\r\n    instanceProps: InstanceProps\r\n  ): number => findNearestItem('row', props, instanceProps, scrollTop),\r\n\r\n  getRowStopIndexForStartIndex: (\r\n    props: Props<any>,\r\n    startIndex: number,\r\n    scrollTop: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { rowCount, height } = props;\r\n\r\n    const itemMetadata = getItemMetadata(\r\n      'row',\r\n      props,\r\n      startIndex,\r\n      instanceProps\r\n    );\r\n    const maxOffset = scrollTop + height;\r\n\r\n    let offset = itemMetadata.offset + itemMetadata.size;\r\n    let stopIndex = startIndex;\r\n\r\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\r\n      stopIndex++;\r\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\r\n    }\r\n\r\n    return stopIndex;\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\r\n    const {\r\n      estimatedColumnWidth,\r\n      estimatedRowHeight,\r\n    } = ((props: any): VariableSizeProps);\r\n\r\n    const instanceProps = {\r\n      columnMetadataMap: {},\r\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\r\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\r\n      lastMeasuredColumnIndex: -1,\r\n      lastMeasuredRowIndex: -1,\r\n      rowMetadataMap: {},\r\n    };\r\n\r\n    instance.resetAfterColumnIndex = (\r\n      columnIndex: number,\r\n      shouldForceUpdate?: boolean = true\r\n    ) => {\r\n      instance.resetAfterIndices({ columnIndex, shouldForceUpdate });\r\n    };\r\n\r\n    instance.resetAfterRowIndex = (\r\n      rowIndex: number,\r\n      shouldForceUpdate?: boolean = true\r\n    ) => {\r\n      instance.resetAfterIndices({ rowIndex, shouldForceUpdate });\r\n    };\r\n\r\n    instance.resetAfterIndices = ({\r\n      columnIndex,\r\n      rowIndex,\r\n      shouldForceUpdate = true,\r\n    }: {\r\n      columnIndex?: number,\r\n      rowIndex?: number,\r\n      shouldForceUpdate: boolean,\r\n    }) => {\r\n      if (typeof columnIndex === 'number') {\r\n        instanceProps.lastMeasuredColumnIndex = Math.min(\r\n          instanceProps.lastMeasuredColumnIndex,\r\n          columnIndex - 1\r\n        );\r\n      }\r\n      if (typeof rowIndex === 'number') {\r\n        instanceProps.lastMeasuredRowIndex = Math.min(\r\n          instanceProps.lastMeasuredRowIndex,\r\n          rowIndex - 1\r\n        );\r\n      }\r\n\r\n      // We could potentially optimize further by only evicting styles after this index,\r\n      // But since styles are only cached while scrolling is in progress-\r\n      // It seems an unnecessary optimization.\r\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\r\n      instance._getItemStyleCache(-1);\r\n\r\n      if (shouldForceUpdate) {\r\n        instance.forceUpdate();\r\n      }\r\n    };\r\n\r\n    return instanceProps;\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: false,\r\n\r\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof columnWidth !== 'function') {\r\n        throw Error(\r\n          'An invalid \"columnWidth\" prop has been specified. ' +\r\n            'Value should be a function. ' +\r\n            `\"${\r\n              columnWidth === null ? 'null' : typeof columnWidth\r\n            }\" was specified.`\r\n        );\r\n      } else if (typeof rowHeight !== 'function') {\r\n        throw Error(\r\n          'An invalid \"rowHeight\" prop has been specified. ' +\r\n            'Value should be a function. ' +\r\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default VariableSizeGrid;\r\n","// @flow\r\n\r\nimport memoizeOne from 'memoize-one';\r\nimport { createElement, PureComponent } from 'react';\r\nimport { cancelTimeout, requestTimeout } from './timer';\r\nimport { getRTLOffsetType } from './domHelpers';\r\n\r\nimport type { TimeoutID } from './timer';\r\n\r\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\r\n\r\ntype itemSize = number | ((index: number) => number);\r\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\r\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\r\ntype Layout = 'horizontal' | 'vertical';\r\n\r\ntype RenderComponentProps<T> = {|\r\n  data: T,\r\n  index: number,\r\n  isScrolling?: boolean,\r\n  style: Object,\r\n|};\r\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\r\n\r\ntype ScrollDirection = 'forward' | 'backward';\r\n\r\ntype onItemsRenderedCallback = ({\r\n  overscanStartIndex: number,\r\n  overscanStopIndex: number,\r\n  visibleStartIndex: number,\r\n  visibleStopIndex: number,\r\n}) => void;\r\ntype onScrollCallback = ({\r\n  scrollDirection: ScrollDirection,\r\n  scrollOffset: number,\r\n  scrollUpdateWasRequested: boolean,\r\n}) => void;\r\n\r\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\r\ntype ItemStyleCache = { [index: number]: Object };\r\n\r\ntype OuterProps = {|\r\n  children: React$Node,\r\n  className: string | void,\r\n  onScroll: (ScrollEvent) => void,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\ntype InnerProps = {|\r\n  children: React$Node,\r\n  style: {\r\n    [string]: mixed,\r\n  },\r\n|};\r\n\r\nexport type Props<T> = {|\r\n  children: RenderComponent<T>,\r\n  className?: string,\r\n  direction: Direction,\r\n  height: number | string,\r\n  initialScrollOffset?: number,\r\n  innerRef?: any,\r\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\r\n  innerTagName?: string, // deprecated\r\n  itemCount: number,\r\n  itemData: T,\r\n  itemKey?: (index: number, data: T) => any,\r\n  itemSize: itemSize,\r\n  layout: Layout,\r\n  onItemsRendered?: onItemsRenderedCallback,\r\n  onScroll?: onScrollCallback,\r\n  outerRef?: any,\r\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\r\n  outerTagName?: string, // deprecated\r\n  overscanCount: number,\r\n  style?: Object,\r\n  useIsScrolling: boolean,\r\n  width: number | string,\r\n|};\r\n\r\ntype State = {|\r\n  instance: any,\r\n  isScrolling: boolean,\r\n  scrollDirection: ScrollDirection,\r\n  scrollOffset: number,\r\n  scrollUpdateWasRequested: boolean,\r\n|};\r\n\r\ntype GetItemOffset = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetItemSize = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\r\ntype GetOffsetForIndexAndAlignment = (\r\n  props: Props<any>,\r\n  index: number,\r\n  align: ScrollToAlign,\r\n  scrollOffset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetStartIndexForOffset = (\r\n  props: Props<any>,\r\n  offset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype GetStopIndexForStartIndex = (\r\n  props: Props<any>,\r\n  startIndex: number,\r\n  scrollOffset: number,\r\n  instanceProps: any\r\n) => number;\r\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\r\ntype ValidateProps = (props: Props<any>) => void;\r\n\r\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\r\n\r\nconst defaultItemKey = (index: number, data: any) => index;\r\n\r\n// In DEV mode, this Set helps us only log a warning once per component instance.\r\n// This avoids spamming the console every time a render happens.\r\nlet devWarningsDirection = null;\r\nlet devWarningsTagName = null;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\r\n    devWarningsDirection = new WeakSet();\r\n    devWarningsTagName = new WeakSet();\r\n  }\r\n}\r\n\r\nexport default function createListComponent({\r\n  getItemOffset,\r\n  getEstimatedTotalSize,\r\n  getItemSize,\r\n  getOffsetForIndexAndAlignment,\r\n  getStartIndexForOffset,\r\n  getStopIndexForStartIndex,\r\n  initInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange,\r\n  validateProps,\r\n}: {|\r\n  getItemOffset: GetItemOffset,\r\n  getEstimatedTotalSize: GetEstimatedTotalSize,\r\n  getItemSize: GetItemSize,\r\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\r\n  getStartIndexForOffset: GetStartIndexForOffset,\r\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\r\n  initInstanceProps: InitInstanceProps,\r\n  shouldResetStyleCacheOnItemSizeChange: boolean,\r\n  validateProps: ValidateProps,\r\n|}) {\r\n  return class List<T> extends PureComponent<Props<T>, State> {\r\n    _instanceProps: any = initInstanceProps(this.props, this);\r\n    _outerRef: ?HTMLDivElement;\r\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\r\n\r\n    static defaultProps = {\r\n      direction: 'ltr',\r\n      itemData: undefined,\r\n      layout: 'vertical',\r\n      overscanCount: 2,\r\n      useIsScrolling: false,\r\n    };\r\n\r\n    state: State = {\r\n      instance: this,\r\n      isScrolling: false,\r\n      scrollDirection: 'forward',\r\n      scrollOffset:\r\n        typeof this.props.initialScrollOffset === 'number'\r\n          ? this.props.initialScrollOffset\r\n          : 0,\r\n      scrollUpdateWasRequested: false,\r\n    };\r\n\r\n    // Always use explicit constructor for React components.\r\n    // It produces less code after transpilation. (#26)\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props: Props<T>) {\r\n      super(props);\r\n    }\r\n\r\n    static getDerivedStateFromProps(\r\n      nextProps: Props<T>,\r\n      prevState: State\r\n    ): $Shape<State> | null {\r\n      validateSharedProps(nextProps, prevState);\r\n      validateProps(nextProps);\r\n      return null;\r\n    }\r\n\r\n    scrollTo(scrollOffset: number): void {\r\n      scrollOffset = Math.max(0, scrollOffset);\r\n\r\n      this.setState((prevState) => {\r\n        if (prevState.scrollOffset === scrollOffset) {\r\n          return null;\r\n        }\r\n        return {\r\n          scrollDirection:\r\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\r\n          scrollOffset: scrollOffset,\r\n          scrollUpdateWasRequested: true,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    }\r\n\r\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\r\n      const { itemCount } = this.props;\r\n      const { scrollOffset } = this.state;\r\n\r\n      index = Math.max(0, Math.min(index, itemCount - 1));\r\n\r\n      this.scrollTo(\r\n        getOffsetForIndexAndAlignment(\r\n          this.props,\r\n          index,\r\n          align,\r\n          scrollOffset,\r\n          this._instanceProps\r\n        )\r\n      );\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { direction, initialScrollOffset, layout } = this.props;\r\n\r\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n        // TODO Deprecate direction \"horizontal\"\r\n        if (direction === 'horizontal' || layout === 'horizontal') {\r\n          outerRef.scrollLeft = initialScrollOffset;\r\n        } else {\r\n          outerRef.scrollTop = initialScrollOffset;\r\n        }\r\n      }\r\n\r\n      this._callPropsCallbacks();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      const { direction, layout } = this.props;\r\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\r\n\r\n      if (scrollUpdateWasRequested && this._outerRef != null) {\r\n        const outerRef = ((this._outerRef: any): HTMLElement);\r\n\r\n        // TODO Deprecate direction \"horizontal\"\r\n        if (direction === 'horizontal' || layout === 'horizontal') {\r\n          if (direction === 'rtl') {\r\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\r\n            switch (getRTLOffsetType()) {\r\n              case 'negative':\r\n                outerRef.scrollLeft = -scrollOffset;\r\n                break;\r\n              case 'positive-ascending':\r\n                outerRef.scrollLeft = scrollOffset;\r\n                break;\r\n              default:\r\n                const { clientWidth, scrollWidth } = outerRef;\r\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\r\n                break;\r\n            }\r\n          } else {\r\n            outerRef.scrollLeft = scrollOffset;\r\n          }\r\n        } else {\r\n          outerRef.scrollTop = scrollOffset;\r\n        }\r\n      }\r\n\r\n      this._callPropsCallbacks();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        children,\r\n        className,\r\n        direction,\r\n        height,\r\n        innerRef,\r\n        innerElementType,\r\n        innerTagName,\r\n        itemCount,\r\n        itemData,\r\n        itemKey = defaultItemKey,\r\n        layout,\r\n        outerElementType,\r\n        outerTagName,\r\n        style,\r\n        useIsScrolling,\r\n        width,\r\n      } = this.props;\r\n      const { isScrolling } = this.state;\r\n\r\n      // TODO Deprecate direction \"horizontal\"\r\n      const isHorizontal =\r\n        direction === 'horizontal' || layout === 'horizontal';\r\n\r\n      const onScroll = isHorizontal\r\n        ? this._onScrollHorizontal\r\n        : this._onScrollVertical;\r\n\r\n      const [startIndex, stopIndex] = this._getRangeToRender();\r\n\r\n      const items = [];\r\n      if (itemCount > 0) {\r\n        for (let index = startIndex; index <= stopIndex; index++) {\r\n          items.push(\r\n            createElement(children, {\r\n              data: itemData,\r\n              key: itemKey(index, itemData),\r\n              index,\r\n              isScrolling: useIsScrolling ? isScrolling : undefined,\r\n              style: this._getItemStyle(index),\r\n              renderedRange: { start: startIndex, stop: stopIndex },\r\n              scrollDirection: this.state.scrollDirection,\r\n            })\r\n          );\r\n        }\r\n      }\r\n\r\n      // Read this value AFTER items have been created,\r\n      // So their actual sizes (if variable) are taken into consideration.\r\n      const estimatedTotalSize = getEstimatedTotalSize(\r\n        this.props,\r\n        this._instanceProps\r\n      );\r\n\r\n      return createElement(\r\n        outerElementType || outerTagName || 'div',\r\n        {\r\n          className,\r\n          onScroll,\r\n          ref: this._outerRefSetter,\r\n          style: {\r\n            position: 'relative',\r\n            height,\r\n            width,\r\n            overflow: 'auto',\r\n            WebkitOverflowScrolling: 'touch',\r\n            willChange: 'transform',\r\n            direction,\r\n            ...style,\r\n          },\r\n        },\r\n        createElement(innerElementType || innerTagName || 'div', {\r\n          children: items,\r\n          ref: innerRef,\r\n          style: {\r\n            height: isHorizontal ? '100%' : estimatedTotalSize,\r\n            pointerEvents: isScrolling ? 'none' : undefined,\r\n            width: isHorizontal ? estimatedTotalSize : '100%',\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    _callOnItemsRendered: (\r\n      overscanStartIndex: number,\r\n      overscanStopIndex: number,\r\n      visibleStartIndex: number,\r\n      visibleStopIndex: number\r\n    ) => void;\r\n    _callOnItemsRendered = memoizeOne(\r\n      (\r\n        overscanStartIndex: number,\r\n        overscanStopIndex: number,\r\n        visibleStartIndex: number,\r\n        visibleStopIndex: number\r\n      ) =>\r\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\r\n          overscanStartIndex,\r\n          overscanStopIndex,\r\n          visibleStartIndex,\r\n          visibleStopIndex,\r\n        })\r\n    );\r\n\r\n    _callOnScroll: (\r\n      scrollDirection: ScrollDirection,\r\n      scrollOffset: number,\r\n      scrollUpdateWasRequested: boolean\r\n    ) => void;\r\n    _callOnScroll = memoizeOne(\r\n      (\r\n        scrollDirection: ScrollDirection,\r\n        scrollOffset: number,\r\n        scrollUpdateWasRequested: boolean\r\n      ) =>\r\n        ((this.props.onScroll: any): onScrollCallback)({\r\n          scrollDirection,\r\n          scrollOffset,\r\n          scrollUpdateWasRequested,\r\n        })\r\n    );\r\n\r\n    _callPropsCallbacks() {\r\n      if (typeof this.props.onItemsRendered === 'function') {\r\n        const { itemCount } = this.props;\r\n        if (itemCount > 0) {\r\n          const [\r\n            overscanStartIndex,\r\n            overscanStopIndex,\r\n            visibleStartIndex,\r\n            visibleStopIndex,\r\n          ] = this._getRangeToRender();\r\n          this._callOnItemsRendered(\r\n            overscanStartIndex,\r\n            overscanStopIndex,\r\n            visibleStartIndex,\r\n            visibleStopIndex\r\n          );\r\n        }\r\n      }\r\n\r\n      if (typeof this.props.onScroll === 'function') {\r\n        const {\r\n          scrollDirection,\r\n          scrollOffset,\r\n          scrollUpdateWasRequested,\r\n        } = this.state;\r\n        this._callOnScroll(\r\n          scrollDirection,\r\n          scrollOffset,\r\n          scrollUpdateWasRequested\r\n        );\r\n      }\r\n    }\r\n\r\n    // Lazily create and cache item styles while scrolling,\r\n    // So that pure component sCU will prevent re-renders.\r\n    // We maintain this cache, and pass a style prop rather than index,\r\n    // So that List can clear cached styles and force item re-render if necessary.\r\n    _getItemStyle: (index: number) => Object;\r\n    _getItemStyle = (index: number): Object => {\r\n      const { direction, itemSize, layout } = this.props;\r\n\r\n      const itemStyleCache = this._getItemStyleCache(\r\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\r\n        shouldResetStyleCacheOnItemSizeChange && layout,\r\n        shouldResetStyleCacheOnItemSizeChange && direction\r\n      );\r\n\r\n      let style;\r\n      if (itemStyleCache.hasOwnProperty(index)) {\r\n        style = itemStyleCache[index];\r\n      } else {\r\n        const offset = getItemOffset(this.props, index, this._instanceProps);\r\n        const size = getItemSize(this.props, index, this._instanceProps);\r\n\r\n        // TODO Deprecate direction \"horizontal\"\r\n        const isHorizontal =\r\n          direction === 'horizontal' || layout === 'horizontal';\r\n\r\n        const isRtl = direction === 'rtl';\r\n        const offsetHorizontal = isHorizontal ? offset : 0;\r\n        itemStyleCache[index] = style = {\r\n          position: 'absolute',\r\n          left: isRtl ? undefined : offsetHorizontal,\r\n          right: isRtl ? offsetHorizontal : undefined,\r\n          top: !isHorizontal ? offset : 0,\r\n          height: !isHorizontal ? size : '100%',\r\n          width: isHorizontal ? size : '100%',\r\n        };\r\n      }\r\n\r\n      return style;\r\n    };\r\n\r\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\r\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\r\n\r\n    _getRangeToRender(): [number, number, number, number] {\r\n      const { itemCount, overscanCount } = this.props;\r\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\r\n\r\n      if (itemCount === 0) {\r\n        return [0, 0, 0, 0];\r\n      }\r\n\r\n      const startIndex = getStartIndexForOffset(\r\n        this.props,\r\n        scrollOffset,\r\n        this._instanceProps\r\n      );\r\n      const stopIndex = getStopIndexForStartIndex(\r\n        this.props,\r\n        startIndex,\r\n        scrollOffset,\r\n        this._instanceProps\r\n      );\r\n\r\n      // Overscan by one item in each direction so that tab/focus works.\r\n      // If there isn't at least one extra item, tab loops back around.\r\n      const overscanBackward =\r\n        !isScrolling || scrollDirection === 'backward'\r\n          ? Math.max(1, overscanCount)\r\n          : 1;\r\n      const overscanForward =\r\n        !isScrolling || scrollDirection === 'forward'\r\n          ? Math.max(1, overscanCount)\r\n          : 1;\r\n\r\n      return [\r\n        Math.max(0, startIndex - overscanBackward),\r\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\r\n        startIndex,\r\n        stopIndex,\r\n      ];\r\n    }\r\n\r\n    _onScrollHorizontal = (event: ScrollEvent): void => {\r\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\r\n      this.setState((prevState) => {\r\n        if (prevState.scrollOffset === scrollLeft) {\r\n          // Scroll position may have been updated by cDM/cDU,\r\n          // In which case we don't need to trigger another render,\r\n          // And we don't want to update state.isScrolling.\r\n          return null;\r\n        }\r\n\r\n        const { direction } = this.props;\r\n\r\n        let scrollOffset = scrollLeft;\r\n        if (direction === 'rtl') {\r\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\r\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\r\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\r\n          switch (getRTLOffsetType()) {\r\n            case 'negative':\r\n              scrollOffset = -scrollLeft;\r\n              break;\r\n            case 'positive-descending':\r\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\r\n              break;\r\n          }\r\n        }\r\n\r\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\r\n        scrollOffset = Math.max(\r\n          0,\r\n          Math.min(scrollOffset, scrollWidth - clientWidth)\r\n        );\r\n\r\n        return {\r\n          isScrolling: true,\r\n          scrollDirection:\r\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\r\n          scrollOffset,\r\n          scrollUpdateWasRequested: false,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    };\r\n\r\n    _onScrollVertical = (event: ScrollEvent): void => {\r\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\r\n      this.setState((prevState) => {\r\n        if (prevState.scrollOffset === scrollTop) {\r\n          // Scroll position may have been updated by cDM/cDU,\r\n          // In which case we don't need to trigger another render,\r\n          // And we don't want to update state.isScrolling.\r\n          return null;\r\n        }\r\n\r\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\r\n        const scrollOffset = Math.max(\r\n          0,\r\n          Math.min(scrollTop, scrollHeight - clientHeight)\r\n        );\r\n\r\n        return {\r\n          isScrolling: true,\r\n          scrollDirection:\r\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\r\n          scrollOffset,\r\n          scrollUpdateWasRequested: false,\r\n        };\r\n      }, this._resetIsScrollingDebounced);\r\n    };\r\n\r\n    _outerRefSetter = (ref: any): void => {\r\n      const { outerRef } = this.props;\r\n\r\n      this._outerRef = ((ref: any): HTMLDivElement);\r\n\r\n      if (typeof outerRef === 'function') {\r\n        outerRef(ref);\r\n      } else if (\r\n        outerRef != null &&\r\n        typeof outerRef === 'object' &&\r\n        outerRef.hasOwnProperty('current')\r\n      ) {\r\n        outerRef.current = ref;\r\n      }\r\n    };\r\n\r\n    _resetIsScrollingDebounced = () => {\r\n      if (this._resetIsScrollingTimeoutId !== null) {\r\n        cancelTimeout(this._resetIsScrollingTimeoutId);\r\n      }\r\n\r\n      this._resetIsScrollingTimeoutId = requestTimeout(\r\n        this._resetIsScrolling,\r\n        IS_SCROLLING_DEBOUNCE_INTERVAL\r\n      );\r\n    };\r\n\r\n    _resetIsScrolling = () => {\r\n      this._resetIsScrollingTimeoutId = null;\r\n\r\n      this.setState({ isScrolling: false }, () => {\r\n        // Clear style cache after state update has been committed.\r\n        // This way we don't break pure sCU for items that don't use isScrolling param.\r\n        this._getItemStyleCache(-1, null);\r\n      });\r\n    };\r\n  };\r\n}\r\n\r\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\r\n// This would avoid ever calling the render function for the same index more than once,\r\n// But it would also add the overhead of a lot of components/fibers.\r\n// I assume people already do this (render function returning a class component),\r\n// So my doing it would just unnecessarily double the wrappers.\r\n\r\nconst validateSharedProps = (\r\n  {\r\n    children,\r\n    direction,\r\n    height,\r\n    layout,\r\n    innerTagName,\r\n    outerTagName,\r\n    width,\r\n  }: Props<any>,\r\n  { instance }: State\r\n): void => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (innerTagName != null || outerTagName != null) {\r\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\r\n        devWarningsTagName.add(instance);\r\n        console.warn(\r\n          'The innerTagName and outerTagName props have been deprecated. ' +\r\n            'Please use the innerElementType and outerElementType props instead.'\r\n        );\r\n      }\r\n    }\r\n\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n\r\n    switch (direction) {\r\n      case 'horizontal':\r\n      case 'vertical':\r\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\r\n          devWarningsDirection.add(instance);\r\n          console.warn(\r\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\r\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\r\n          );\r\n        }\r\n        break;\r\n      case 'ltr':\r\n      case 'rtl':\r\n        // Valid values\r\n        break;\r\n      default:\r\n        throw Error(\r\n          'An invalid \"direction\" prop has been specified. ' +\r\n            'Value should be either \"ltr\" or \"rtl\". ' +\r\n            `\"${direction}\" was specified.`\r\n        );\r\n    }\r\n\r\n    switch (layout) {\r\n      case 'horizontal':\r\n      case 'vertical':\r\n        // Valid values\r\n        break;\r\n      default:\r\n        throw Error(\r\n          'An invalid \"layout\" prop has been specified. ' +\r\n            'Value should be either \"horizontal\" or \"vertical\". ' +\r\n            `\"${layout}\" was specified.`\r\n        );\r\n    }\r\n\r\n    if (children == null) {\r\n      throw Error(\r\n        'An invalid \"children\" prop has been specified. ' +\r\n          'Value should be a React component. ' +\r\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\r\n      );\r\n    }\r\n\r\n    if (isHorizontal && typeof width !== 'number') {\r\n      throw Error(\r\n        'An invalid \"width\" prop has been specified. ' +\r\n          'Horizontal lists must specify a number for width. ' +\r\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\r\n      );\r\n    } else if (!isHorizontal && typeof height !== 'number') {\r\n      throw Error(\r\n        'An invalid \"height\" prop has been specified. ' +\r\n          'Vertical lists must specify a number for height. ' +\r\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\r\n      );\r\n    }\r\n  }\r\n};\r\n","// @flow\r\n\r\nimport createListComponent from './createListComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createListComponent';\r\n\r\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\r\n\r\ntype VariableSizeProps = {|\r\n  estimatedItemSize: number,\r\n  ...Props<any>,\r\n|};\r\n\r\ntype itemSizeGetter = (index: number) => number;\r\n\r\ntype ItemMetadata = {|\r\n  offset: number,\r\n  size: number,\r\n|};\r\ntype InstanceProps = {|\r\n  itemMetadataMap: { [index: number]: ItemMetadata },\r\n  estimatedItemSize: number,\r\n  lastMeasuredIndex: number,\r\n|};\r\n\r\nconst getItemMetadata = (\r\n  props: Props<any>,\r\n  index: number,\r\n  instanceProps: InstanceProps\r\n): ItemMetadata => {\r\n  const { itemSize } = ((props: any): VariableSizeProps);\r\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\r\n\r\n  if (index > lastMeasuredIndex) {\r\n    let offset = 0;\r\n    if (lastMeasuredIndex >= 0) {\r\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\r\n      offset = itemMetadata.offset + itemMetadata.size;\r\n    }\r\n\r\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\r\n      let size = ((itemSize: any): itemSizeGetter)(i);\r\n\r\n      itemMetadataMap[i] = {\r\n        offset,\r\n        size,\r\n      };\r\n\r\n      offset += size;\r\n    }\r\n\r\n    instanceProps.lastMeasuredIndex = index;\r\n  }\r\n\r\n  return itemMetadataMap[index];\r\n};\r\n\r\nconst findNearestItem = (\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  offset: number\r\n) => {\r\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\r\n\r\n  const lastMeasuredItemOffset =\r\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\r\n\r\n  if (lastMeasuredItemOffset >= offset) {\r\n    // If we've already measured items within this range just use a binary search as it's faster.\r\n    return findNearestItemBinarySearch(\r\n      props,\r\n      instanceProps,\r\n      lastMeasuredIndex,\r\n      0,\r\n      offset\r\n    );\r\n  } else {\r\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n    // The overall complexity for this approach is O(log n).\r\n    return findNearestItemExponentialSearch(\r\n      props,\r\n      instanceProps,\r\n      Math.max(0, lastMeasuredIndex),\r\n      offset\r\n    );\r\n  }\r\n};\r\n\r\nconst findNearestItemBinarySearch = (\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  high: number,\r\n  low: number,\r\n  offset: number\r\n): number => {\r\n  while (low <= high) {\r\n    const middle = low + Math.floor((high - low) / 2);\r\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\r\n\r\n    if (currentOffset === offset) {\r\n      return middle;\r\n    } else if (currentOffset < offset) {\r\n      low = middle + 1;\r\n    } else if (currentOffset > offset) {\r\n      high = middle - 1;\r\n    }\r\n  }\r\n\r\n  if (low > 0) {\r\n    return low - 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nconst findNearestItemExponentialSearch = (\r\n  props: Props<any>,\r\n  instanceProps: InstanceProps,\r\n  index: number,\r\n  offset: number\r\n): number => {\r\n  const { itemCount } = props;\r\n  let interval = 1;\r\n\r\n  while (\r\n    index < itemCount &&\r\n    getItemMetadata(props, index, instanceProps).offset < offset\r\n  ) {\r\n    index += interval;\r\n    interval *= 2;\r\n  }\r\n\r\n  return findNearestItemBinarySearch(\r\n    props,\r\n    instanceProps,\r\n    Math.min(index, itemCount - 1),\r\n    Math.floor(index / 2),\r\n    offset\r\n  );\r\n};\r\n\r\nconst getEstimatedTotalSize = (\r\n  { itemCount }: Props<any>,\r\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\r\n) => {\r\n  let totalSizeOfMeasuredItems = 0;\r\n\r\n  // Edge case check for when the number of items decreases while a scroll is in progress.\r\n  // https://github.com/bvaughn/react-window/pull/138\r\n  if (lastMeasuredIndex >= itemCount) {\r\n    lastMeasuredIndex = itemCount - 1;\r\n  }\r\n\r\n  if (lastMeasuredIndex >= 0) {\r\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\r\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\r\n  }\r\n\r\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\r\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\r\n\r\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\r\n};\r\n\r\nconst VariableSizeList = createListComponent({\r\n  getItemOffset: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => getItemMetadata(props, index, instanceProps).offset,\r\n\r\n  getItemSize: (\r\n    props: Props<any>,\r\n    index: number,\r\n    instanceProps: InstanceProps\r\n  ): number => instanceProps.itemMetadataMap[index].size,\r\n\r\n  getEstimatedTotalSize,\r\n\r\n  getOffsetForIndexAndAlignment: (\r\n    props: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { direction, height, layout, width } = props;\r\n\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\r\n\r\n    // Get estimated total size after ItemMetadata is computed,\r\n    // To ensure it reflects actual measurements instead of just estimates.\r\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\r\n\r\n    const maxOffset = Math.max(\r\n      0,\r\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      itemMetadata.offset - size + itemMetadata.size\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (\r\n        scrollOffset >= minOffset - size &&\r\n        scrollOffset <= maxOffset + size\r\n      ) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center':\r\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\r\n      case 'auto':\r\n      default:\r\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\r\n          return scrollOffset;\r\n        } else if (scrollOffset < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getStartIndexForOffset: (\r\n    props: Props<any>,\r\n    offset: number,\r\n    instanceProps: InstanceProps\r\n  ): number => findNearestItem(props, instanceProps, offset),\r\n\r\n  getStopIndexForStartIndex: (\r\n    props: Props<any>,\r\n    startIndex: number,\r\n    scrollOffset: number,\r\n    instanceProps: InstanceProps\r\n  ): number => {\r\n    const { direction, height, itemCount, layout, width } = props;\r\n\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\r\n    const maxOffset = scrollOffset + size;\r\n\r\n    let offset = itemMetadata.offset + itemMetadata.size;\r\n    let stopIndex = startIndex;\r\n\r\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\r\n      stopIndex++;\r\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\r\n    }\r\n\r\n    return stopIndex;\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\r\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\r\n\r\n    const instanceProps = {\r\n      itemMetadataMap: {},\r\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\r\n      lastMeasuredIndex: -1,\r\n    };\r\n\r\n    instance.resetAfterIndex = (\r\n      index: number,\r\n      shouldForceUpdate?: boolean = true\r\n    ) => {\r\n      instanceProps.lastMeasuredIndex = Math.min(\r\n        instanceProps.lastMeasuredIndex,\r\n        index - 1\r\n      );\r\n\r\n      // We could potentially optimize further by only evicting styles after this index,\r\n      // But since styles are only cached while scrolling is in progress-\r\n      // It seems an unnecessary optimization.\r\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\r\n      instance._getItemStyleCache(-1);\r\n\r\n      if (shouldForceUpdate) {\r\n        instance.forceUpdate();\r\n      }\r\n    };\r\n\r\n    return instanceProps;\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: false,\r\n\r\n  validateProps: ({ itemSize }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof itemSize !== 'function') {\r\n        throw Error(\r\n          'An invalid \"itemSize\" prop has been specified. ' +\r\n            'Value should be a function. ' +\r\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default VariableSizeList;\r\n","// @flow\r\n\r\nimport createGridComponent from './createGridComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createGridComponent';\r\n\r\nconst FixedSizeGrid = createGridComponent({\r\n  getColumnOffset: ({ columnWidth }: Props<any>, index: number): number =>\r\n    index * ((columnWidth: any): number),\r\n\r\n  getColumnWidth: ({ columnWidth }: Props<any>, index: number): number =>\r\n    ((columnWidth: any): number),\r\n\r\n  getRowOffset: ({ rowHeight }: Props<any>, index: number): number =>\r\n    index * ((rowHeight: any): number),\r\n\r\n  getRowHeight: ({ rowHeight }: Props<any>, index: number): number =>\r\n    ((rowHeight: any): number),\r\n\r\n  getEstimatedTotalHeight: ({ rowCount, rowHeight }: Props<any>) =>\r\n    ((rowHeight: any): number) * rowCount,\r\n\r\n  getEstimatedTotalWidth: ({ columnCount, columnWidth }: Props<any>) =>\r\n    ((columnWidth: any): number) * columnCount,\r\n\r\n  getOffsetForColumnAndAlignment: (\r\n    { columnCount, columnWidth, width }: Props<any>,\r\n    columnIndex: number,\r\n    align: ScrollToAlign,\r\n    scrollLeft: number,\r\n    instanceProps: typeof undefined,\r\n    scrollbarSize: number\r\n  ): number => {\r\n    const lastColumnOffset = Math.max(\r\n      0,\r\n      columnCount * ((columnWidth: any): number) - width\r\n    );\r\n    const maxOffset = Math.min(\r\n      lastColumnOffset,\r\n      columnIndex * ((columnWidth: any): number)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      columnIndex * ((columnWidth: any): number) -\r\n        width +\r\n        scrollbarSize +\r\n        ((columnWidth: any): number)\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center':\r\n        // \"Centered\" offset is usually the average of the min and max.\r\n        // But near the edges of the list, this doesn't hold true.\r\n        const middleOffset = Math.round(\r\n          minOffset + (maxOffset - minOffset) / 2\r\n        );\r\n        if (middleOffset < Math.ceil(width / 2)) {\r\n          return 0; // near the beginning\r\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\r\n          return lastColumnOffset; // near the end\r\n        } else {\r\n          return middleOffset;\r\n        }\r\n      case 'auto':\r\n      default:\r\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\r\n          return scrollLeft;\r\n        } else if (minOffset > maxOffset) {\r\n          // Because we only take into account the scrollbar size when calculating minOffset\r\n          // this value can be larger than maxOffset when at the end of the list\r\n          return minOffset;\r\n        } else if (scrollLeft < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getOffsetForRowAndAlignment: (\r\n    { rowHeight, height, rowCount }: Props<any>,\r\n    rowIndex: number,\r\n    align: ScrollToAlign,\r\n    scrollTop: number,\r\n    instanceProps: typeof undefined,\r\n    scrollbarSize: number\r\n  ): number => {\r\n    const lastRowOffset = Math.max(\r\n      0,\r\n      rowCount * ((rowHeight: any): number) - height\r\n    );\r\n    const maxOffset = Math.min(\r\n      lastRowOffset,\r\n      rowIndex * ((rowHeight: any): number)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      rowIndex * ((rowHeight: any): number) -\r\n        height +\r\n        scrollbarSize +\r\n        ((rowHeight: any): number)\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center':\r\n        // \"Centered\" offset is usually the average of the min and max.\r\n        // But near the edges of the list, this doesn't hold true.\r\n        const middleOffset = Math.round(\r\n          minOffset + (maxOffset - minOffset) / 2\r\n        );\r\n        if (middleOffset < Math.ceil(height / 2)) {\r\n          return 0; // near the beginning\r\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\r\n          return lastRowOffset; // near the end\r\n        } else {\r\n          return middleOffset;\r\n        }\r\n      case 'auto':\r\n      default:\r\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\r\n          return scrollTop;\r\n        } else if (minOffset > maxOffset) {\r\n          // Because we only take into account the scrollbar size when calculating minOffset\r\n          // this value can be larger than maxOffset when at the end of the list\r\n          return minOffset;\r\n        } else if (scrollTop < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getColumnStartIndexForOffset: (\r\n    { columnWidth, columnCount }: Props<any>,\r\n    scrollLeft: number\r\n  ): number =>\r\n    Math.max(\r\n      0,\r\n      Math.min(\r\n        columnCount - 1,\r\n        Math.floor(scrollLeft / ((columnWidth: any): number))\r\n      )\r\n    ),\r\n\r\n  getColumnStopIndexForStartIndex: (\r\n    { columnWidth, columnCount, width }: Props<any>,\r\n    startIndex: number,\r\n    scrollLeft: number\r\n  ): number => {\r\n    const left = startIndex * ((columnWidth: any): number);\r\n    const numVisibleColumns = Math.ceil(\r\n      (width + scrollLeft - left) / ((columnWidth: any): number)\r\n    );\r\n    return Math.max(\r\n      0,\r\n      Math.min(\r\n        columnCount - 1,\r\n        startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\r\n      )\r\n    );\r\n  },\r\n\r\n  getRowStartIndexForOffset: (\r\n    { rowHeight, rowCount }: Props<any>,\r\n    scrollTop: number\r\n  ): number =>\r\n    Math.max(\r\n      0,\r\n      Math.min(rowCount - 1, Math.floor(scrollTop / ((rowHeight: any): number)))\r\n    ),\r\n\r\n  getRowStopIndexForStartIndex: (\r\n    { rowHeight, rowCount, height }: Props<any>,\r\n    startIndex: number,\r\n    scrollTop: number\r\n  ): number => {\r\n    const top = startIndex * ((rowHeight: any): number);\r\n    const numVisibleRows = Math.ceil(\r\n      (height + scrollTop - top) / ((rowHeight: any): number)\r\n    );\r\n    return Math.max(\r\n      0,\r\n      Math.min(\r\n        rowCount - 1,\r\n        startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\r\n      )\r\n    );\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>): any {\r\n    // Noop\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: true,\r\n\r\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof columnWidth !== 'number') {\r\n        throw Error(\r\n          'An invalid \"columnWidth\" prop has been specified. ' +\r\n            'Value should be a number. ' +\r\n            `\"${\r\n              columnWidth === null ? 'null' : typeof columnWidth\r\n            }\" was specified.`\r\n        );\r\n      }\r\n\r\n      if (typeof rowHeight !== 'number') {\r\n        throw Error(\r\n          'An invalid \"rowHeight\" prop has been specified. ' +\r\n            'Value should be a number. ' +\r\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default FixedSizeGrid;\r\n","// @flow\r\n\r\nimport createListComponent from './createListComponent';\r\n\r\nimport type { Props, ScrollToAlign } from './createListComponent';\r\n\r\nconst FixedSizeList = createListComponent({\r\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\r\n    index * ((itemSize: any): number),\r\n\r\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\r\n    ((itemSize: any): number),\r\n\r\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\r\n    ((itemSize: any): number) * itemCount,\r\n\r\n  getOffsetForIndexAndAlignment: (\r\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\r\n    index: number,\r\n    align: ScrollToAlign,\r\n    scrollOffset: number\r\n  ): number => {\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const lastItemOffset = Math.max(\r\n      0,\r\n      itemCount * ((itemSize: any): number) - size\r\n    );\r\n    const maxOffset = Math.min(\r\n      lastItemOffset,\r\n      index * ((itemSize: any): number)\r\n    );\r\n    const minOffset = Math.max(\r\n      0,\r\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\r\n    );\r\n\r\n    if (align === 'smart') {\r\n      if (\r\n        scrollOffset >= minOffset - size &&\r\n        scrollOffset <= maxOffset + size\r\n      ) {\r\n        align = 'auto';\r\n      } else {\r\n        align = 'center';\r\n      }\r\n    }\r\n\r\n    switch (align) {\r\n      case 'start':\r\n        return maxOffset;\r\n      case 'end':\r\n        return minOffset;\r\n      case 'center': {\r\n        // \"Centered\" offset is usually the average of the min and max.\r\n        // But near the edges of the list, this doesn't hold true.\r\n        const middleOffset = Math.round(\r\n          minOffset + (maxOffset - minOffset) / 2\r\n        );\r\n        if (middleOffset < Math.ceil(size / 2)) {\r\n          return 0; // near the beginning\r\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\r\n          return lastItemOffset; // near the end\r\n        } else {\r\n          return middleOffset;\r\n        }\r\n      }\r\n      case 'auto':\r\n      default:\r\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\r\n          return scrollOffset;\r\n        } else if (scrollOffset < minOffset) {\r\n          return minOffset;\r\n        } else {\r\n          return maxOffset;\r\n        }\r\n    }\r\n  },\r\n\r\n  getStartIndexForOffset: (\r\n    { itemCount, itemSize }: Props<any>,\r\n    offset: number\r\n  ): number =>\r\n    Math.max(\r\n      0,\r\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\r\n    ),\r\n\r\n  getStopIndexForStartIndex: (\r\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\r\n    startIndex: number,\r\n    scrollOffset: number\r\n  ): number => {\r\n    // TODO Deprecate direction \"horizontal\"\r\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\r\n    const offset = startIndex * ((itemSize: any): number);\r\n    const size = (((isHorizontal ? width : height): any): number);\r\n    const numVisibleItems = Math.ceil(\r\n      (size + scrollOffset - offset) / ((itemSize: any): number)\r\n    );\r\n    return Math.max(\r\n      0,\r\n      Math.min(\r\n        itemCount - 1,\r\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\r\n      )\r\n    );\r\n  },\r\n\r\n  initInstanceProps(props: Props<any>): any {\r\n    // Noop\r\n  },\r\n\r\n  shouldResetStyleCacheOnItemSizeChange: true,\r\n\r\n  validateProps: ({ itemSize }: Props<any>): void => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof itemSize !== 'number') {\r\n        throw Error(\r\n          'An invalid \"itemSize\" prop has been specified. ' +\r\n            'Value should be a number. ' +\r\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\r\n        );\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default FixedSizeList;\r\n","// @flow\r\n\r\n// Pulled from react-compat\r\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\r\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\r\n  for (let attribute in prev) {\r\n    if (!(attribute in next)) {\r\n      return true;\r\n    }\r\n  }\r\n  for (let attribute in next) {\r\n    if (prev[attribute] !== next[attribute]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","// @flow\r\n\r\nimport shallowDiffers from './shallowDiffers';\r\n\r\n// Custom comparison function for React.memo().\r\n// It knows to compare individual style props and ignore the wrapper object.\r\n// See https://reactjs.org/docs/react-api.html#reactmemo\r\nexport default function areEqual(\r\n  prevProps: Object,\r\n  nextProps: Object\r\n): boolean {\r\n  const { style: prevStyle, ...prevRest } = prevProps;\r\n  const { style: nextStyle, ...nextRest } = nextProps;\r\n\r\n  return (\r\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\r\n  );\r\n}\r\n","// @flow\r\n\r\nimport areEqual from './areEqual';\r\nimport shallowDiffers from './shallowDiffers';\r\n\r\n// Custom shouldComponentUpdate for class components.\r\n// It knows to compare individual style props and ignore the wrapper object.\r\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\r\nexport default function shouldComponentUpdate(\r\n  nextProps: Object,\r\n  nextState: Object\r\n): boolean {\r\n  return (\r\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\r\n  );\r\n}\r\n"],"names":["hasNativePerformanceNow","performance","now","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","tick","call","requestAnimationFrame","size","getScrollbarSize","recalculate","div","document","createElement","style","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","IS_SCROLLING_DEBOUNCE_INTERVAL","defaultItemKey","columnIndex","data","rowIndex","devWarningsOverscanCount","devWarningsOverscanRowsColumnsCount","devWarningsTagName","process","env","NODE_ENV","window","WeakSet","createGridComponent","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","props","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","state","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","scrollTop","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","memoizeOne","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","key","hasOwnProperty","offset","isRtl","position","left","undefined","right","top","_","__","___","_onScroll","event","currentTarget","clientHeight","scrollHeight","scrollWidth","setState","prevState","calculatedScrollLeft","Math","max","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","ref","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","scrollTo","scrollToItem","align","columnCount","rowCount","scrollbarSize","estimatedTotalHeight","estimatedTotalWidth","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_callPropsCallbacks","componentDidUpdate","componentWillUnmount","render","children","className","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","items","push","WebkitOverflowScrolling","willChange","pointerEvents","overscanColumnCount","overscanColumnsCount","overscanCount","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","overscanRowCount","overscanRowsCount","PureComponent","defaultProps","has","add","console","warn","Error","DEFAULT_ESTIMATED_ITEM_SIZE","rowMetadataMap","estimatedRowHeight","lastMeasuredRowIndex","totalSizeOfMeasuredRows","itemMetadata","numUnmeasuredItems","totalSizeOfUnmeasuredItems","columnMetadataMap","estimatedColumnWidth","lastMeasuredColumnIndex","getItemMetadata","itemType","index","instanceProps","itemMetadataMap","itemSize","lastMeasuredIndex","i","findNearestItem","lastMeasuredItemOffset","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","getOffsetForIndexAndAlignment","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","forceUpdate","devWarningsDirection","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getStartIndexForOffset","getStopIndexForStartIndex","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","isHorizontal","offsetHorizontal","_onScrollHorizontal","_onScrollVertical","_getRangeToRender","renderedRange","stop","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","resetAfterIndex","FixedSizeGrid","lastColumnOffset","middleOffset","ceil","lastRowOffset","numVisibleColumns","numVisibleRows","FixedSizeList","lastItemOffset","numVisibleItems","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","shouldComponentUpdate","nextState"],"mappings":"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"}